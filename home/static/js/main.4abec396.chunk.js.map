{"version":3,"sources":["components/Resume.jsx","components/Resume-2.jsx","components/NavBar.jsx","services/github.js","services/download.js","App.js","serviceWorker.js","index.js"],"names":["Contact","info","infoKV","Object","entries","map","idx","k","v","key","length","Resume","data","className","style","fontSize","margin","firstname","lastname","color","paddingTop","contact","Array","isArray","skills","type","items","join","github_projects","href","link","tagline","tools","other_projects","work_experience","details","cellPadding","width","education","schools","other_experience_achievement","ContactItem","styled","span","fontFamily","icon","faEnvelope","email","faPhone","phone","faGithub","github","faLinkedin","linkedin","Section","heading","subtitle","title","points","point","SkillList","ListSection","item","Education","school","institution","degree","major","graduation_year","NavBar","getRepos","useState","value","setValue","lineHeight","backgroundColor","height","onSubmit","event","preventDefault","onChange","target","placeholder","search","a","fetch","result","status","alert","json","jsonResult","download","options","method","body","JSON","stringify","headers","Headers","Accept","console","log","res","jsonRes","sample","website","project_name","description","technology_used","headline","organisation","location","from","to","ErrorDisplay","error","message","loc","start","line","column","codeFrame","LoadingContainer","div","LoadingText","p","Resumes","App","setData","prettier","format","parser","plugins","babylon","stringData","setStringData","currentResume","setCurrentResume","isValid","setValid","loading","setLoading","useEffect","window","localStorage","setItem","setError","newValue","parse","err","warn","handleGithubSearch","projects","slice","project","name","html_url","handleDownload","resume","response","filename","document","DisplayedResume","faSpinner","size","pulse","data-position","data-tooltip","id","onClick","mode","theme","editorProps","$blockScrolling","wrapEnabled","classNameName","faArrowAltCircleLeft","disabled","faDownload","faArrowCircleRight","overflow","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.4abec396.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Resume.css\";\nimport tw from \"twin.macro\";\nconst Contact = ({ info }) => {\n  let infoKV = Object.entries(info);\n  return infoKV.map(([k, v], idx) => (\n    <span key={k}>\n      {v} {idx < infoKV.length - 1 ? <b tw=\"font-extrabold\"> | </b> : \"\"}\n    </span>\n  ));\n};\n\n//injecting request data to template string html\nconst Resume = ({ data }) => (\n  <div className=\"m-8\">\n    <center>\n      <h1 style={{ fontSize: \"initial\", margin: \"1rem 0\" }}>\n        {data.firstname} {data.lastname}\n      </h1>\n      <h4\n        className=\"light m-m-t-10\"\n        style={{ color: \"grey\", paddingTop: \"5px\" }}\n      >\n        <Contact info={data.contact} />\n      </h4>\n    </center>\n\n    <hr className=\"thick\" />\n    <h4 className=\"\">TECHNICAL SKILLS</h4>\n    <div className=\"offset-2\">\n      {Array.isArray(data.skills) &&\n        data.skills.map((key) => (\n          <p key={key.type}>\n            <strong>{key.type}:</strong> {key.items.join(\", \")}\n          </p>\n        ))}\n    </div>\n    <h4 className=\"\">PERSONAL PROJECTS</h4>\n    <div className=\"offset-2\">\n      {Array.isArray(data.github_projects) &&\n        data.github_projects.map((key) => (\n          <div key={key[\"project_name\"]}>\n            <p>\n              <strong className=\"title\">\n                {key[\"project_name\"]} <a href={key.link}>{key.tagline}</a>\n              </strong>\n            </p>\n            <div className=\"offset-2 p\">\n              {\" \"}\n              {key[\"description\"][0]} Technologies:{\" \"}\n              {key[\"technology_used\"].tools.join(\", \")}\n            </div>\n          </div>\n        ))}\n    </div>\n    <h4 className=\"\">OTHER PROJECTS</h4>\n    {Array.isArray(data.other_projects) &&\n      data.other_projects.map((key) => (\n        <div>\n          <p>\n            <strong className=\"title\">{key[\"headline\"]}</strong>\n          </p>\n          <div className=\"offset-2 p\">\n            {\" \"}\n            {key[\"description\"]} Technologies:{\" \"}\n            {key[\"technology_used\"].tools.join(\", \")}\n          </div>\n        </div>\n      ))}\n\n    <h4 className=\"\">PROFESSIONAL EXPERIENCE</h4>\n    <div className=\"offset-2\">\n      {Array.isArray(data.work_experience) &&\n        data.work_experience.map((key) => (\n          <div key={key.details[0]}>\n            <p>\n              <strong className=\"title\">\n                {`${key[\"title\"]}, ${key[\"organisation\"]}, ${key[\"location\"]}`}\n                <span className=\"pull-right\">\n                  {key[\"from\"]} - {key[\"to\"]}\n                </span>\n              </strong>\n            </p>\n            <div className=\"offset-2 p\">\n              {key[\"details\"][0]} Technologies:{\" \"}\n              {key[\"technology_used\"].tools.join(\", \")}\n            </div>\n          </div>\n        ))}\n    </div>\n\n    <h4 className=\"\">EDUCATION</h4>\n    <div className=\"\">\n      <table cellPadding=\"10\" style={{ width: \"100%\" }}>\n        <thead>\n          <tr>\n            <th>Degree</th>\n            <th>Major</th>\n            <th>Institution</th>\n            <th>graduation Year</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            {data.education.schools.map(function (key) {\n              return (\n                <>\n                  <td>{key[\"degree\"]}</td>\n                  <td>{key[\"major\"]}</td>\n                  <td>{key[\"institution\"]}</td>\n                  <td>{key[\"graduation_year\"]}</td>\n                </>\n              );\n            })}\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div style={{ margin: \"1rem 0\" }}>\n      <h4 className=\"\">OTHER EXPERIENCE</h4>\n      <div className=\"offset-2\">\n        {Array.isArray(data.other_experience_achievement) &&\n          data.other_experience_achievement.map(function (key) {\n            return <p key={key}>{key}</p>;\n          })}\n      </div>\n    </div>\n  </div>\n);\n\nexport default Resume;\n","import React from \"react\";\nimport \"./Resume-2.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nimport { faPhone, faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"tailwindcss/dist/base.min.css\";\nimport tw, { styled } from \"twin.macro\";\n\nlet ContactItem = styled.span`\n  ${tw`mr-3`}\n`;\nconst Contact = ({ contact }) => (\n  <div>\n    <h1 tw=\"text-2xl mb-3\" style={{ fontFamily: \"Merriweather\" }}>\n      {contact.firstname} {contact.lastname}\n    </h1>\n    <div\n      tw=\"bg-gray-400 py-2 px-2\"\n      style={{ fontFamily: \"Roboto\" }}\n      className=\"font-sans max\"\n    >\n      <ContactItem>\n        <span tw=\"rounded-full p-1 bg-gray-500 mr-1\" className=\"rounded-full\">\n          <FontAwesomeIcon icon={faEnvelope} />\n        </span>{\" \"}\n        {contact.email}\n      </ContactItem>\n      <ContactItem>\n        <span tw=\"rounded-full p-1 bg-gray-500 mr-1\" className=\"rounded-full\">\n          <FontAwesomeIcon icon={faPhone} />\n        </span>{\" \"}\n        {contact.phone}\n      </ContactItem>\n      <ContactItem>\n        <span tw=\"rounded-full p-1 bg-gray-500 mr-1\" className=\"rounded-full\">\n          <FontAwesomeIcon icon={faGithub} />\n        </span>\n        <a href={contact.github}>{contact.github}</a>\n      </ContactItem>\n      <span>\n        <span tw=\"rounded-full p-1 bg-gray-500 mr-1\" className=\"rounded-full\">\n          <FontAwesomeIcon icon={faLinkedin} />\n        </span>\n        <a href={contact.linkedin}>{contact.linkedin}</a>\n      </span>\n    </div>\n  </div>\n);\n\nconst Section = ({ heading, items }) => (\n  <div tw=\"mb-1\" style={{ fontFamily: \"Roboto\" }}>\n    <h4 className=\"uppercase text-lg\" tw=\"uppercase text-sm pt-0\">\n      {heading}\n    </h4>\n    <div tw=\"w-10 h-1 border-t-2 -mt-1\"></div>\n    {items.map((data) => (\n      <div key={data.subtitle} tw=\"\">\n        <p tw=\"font-bold\">{data.title}</p>\n        <p>{data.subtitle}</p>\n        <ul tw=\"list-disc ml-8\" className=\"list-disc\">\n          {!Array.isArray(data.points)\n            ? []\n            : data.points.map((point) => <li key={point}>{point}</li>)}\n        </ul>\n      </div>\n    ))}\n  </div>\n);\n\nconst SkillList = ({ type, skills }) => (\n  <li>\n    {type}: {skills.join(\", \")}\n  </li>\n);\nconst ListSection = ({ heading, items }) => (\n  <div tw=\"mb-1\" style={{ fontFamily: \"Roboto\" }}>\n    <h4 className=\"uppercase text-lg\" tw=\"uppercase text-sm pt-0\">\n      {heading}\n    </h4>\n    <div tw=\"w-10 h-1 border-t-2 -mt-1\"></div>\n    <ul tw=\"list-disc ml-8\" className=\"list-disc\">\n      {items.map((item) => (\n        <SkillList type={item.type} skills={item.items} key={item.type} />\n      ))}\n    </ul>\n  </div>\n);\n\nconst Education = ({ schools }) => (\n  <div tw=\"mb-1\" style={{ fontFamily: \"Roboto\" }}>\n    <h4 tw=\"uppercase text-sm\">Education</h4>\n    <div tw=\"w-10 h-1 border-t-2 -mt-1\"></div>\n\n    {schools.map((school) => (\n      <div key={school}>\n        <p tw=\"font-bold\">{school.institution}</p>\n        <p>{school.degree}</p>\n        <p>\n          {school.major}, {school.graduation_year}\n        </p>\n      </div>\n    ))}\n  </div>\n);\n\nexport default ({ data }) => (\n  <div tw=\"my-5 mx-1\">\n    <Contact\n      contact={{\n        firstname: data.firstname,\n        lastname: data.lastname,\n        ...data.contact,\n      }}\n    />\n    {data.education && (\n      <Education\n        schools={\n          !Array.isArray(data.education.schools) ? [] : data.education.schools\n        }\n      />\n    )}\n    {data.skills && (\n      <ListSection\n        heading=\"Skills\"\n        items={!Array.isArray(data.skills) ? [] : data.skills}\n      />\n    )}\n    {data.work_experience && (\n      <Section\n        heading=\"Work Experience\"\n        items={\n          !Array.isArray(data.work_experience)\n            ? []\n            : data.work_experience.map((item) => ({\n                title: item.title,\n                subtitle: `${item.organisation} ${item.from} - ${item.to}`,\n                points: [\n                  ...(!Array.isArray(item.details) ? [] : item.details),\n                  `Technology Used: ${\n                    !Array.isArray(item.technology_used?.tools)\n                      ? []\n                      : item.technology_used?.tools.join(\" \")\n                  }`,\n                ],\n              }))\n        }\n      />\n    )}\n    {data.github_projects && (\n      <Section\n        heading=\"Personal Projects\"\n        items={\n          !Array.isArray(data.github_projects)\n            ? []\n            : data.github_projects.map((item) => ({\n                title: item.project_name,\n                subtitle: item.description,\n                points: [\n                  `Technology Used: ${\n                    !Array.isArray(item.technology_used?.tools)\n                      ? []\n                      : item.technology_used?.tools.join(\" \")\n                  }`,\n                  <a href={item.link}>{item.link}</a>,\n                ],\n              }))\n        }\n      />\n    )}\n    {data.other_projects && (\n      <Section\n        heading=\"Other Projects\"\n        items={\n          !Array.isArray(data.other_projects)\n            ? []\n            : data.other_projects.map((item) => ({\n                title: item.headline,\n                subtitle: item.description,\n                points: [\n                  `Technology Used: ${\n                    !Array.isArray(item.technology_used?.tools)\n                      ? []\n                      : item.technology_used?.tools.join(\" \")\n                  }`,\n                ],\n              }))\n        }\n      />\n    )}\n    {data.other_experience_achievement && (\n      <div tw=\"mb-1\" style={{ fontFamily: \"Roboto\" }}>\n        <h4 className=\"uppercase text-lg\" tw=\"uppercase text-sm pt-0\">\n          Other Achievements\n        </h4>\n        <div tw=\"w-10 h-1 border-t-2 -mt-1\"></div>\n        <ul tw=\"list-disc ml-8\" className=\"list-disc\">\n          {!Array.isArray(data.other_experience_achievement)\n            ? []\n            : data.other_experience_achievement.map((item) => (\n                <li key={item}>{item}</li>\n              ))}\n        </ul>\n      </div>\n    )}\n  </div>\n);\n","import React, { useState } from \"react\";\nimport tw from \"twin.macro\";\nimport \"tailwindcss/dist/base.min.css\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\nconst NavBar = ({ getRepos }) => {\n  let [value, setValue] = useState(\"\");\n  let handleSubmit = (event) => {\n    event.preventDefault();\n    getRepos(value);\n    setValue(\"\");\n  };\n\n  let handleChange = (event) => {\n    setValue(event.target.value);\n  };\n  return (\n    <nav\n      tw=\"py-2 flex lg:justify-end mb-2 shadow justify-center items-center\"\n      style={{\n        lineHeight: \"initial\",\n        backgroundColor: \"initial\",\n        height: \"initial\",\n        fontFamily: \"Roboto\",\n      }}\n    >\n      <div tw=\"text-white w-full\">\n        <form tw=\"flex\" onSubmit={handleSubmit}>\n          <button tw=\"px-4 py-2 mr-5 bg-gray-700 rounded text-lg\">\n            <FontAwesomeIcon icon={faGithub} />\n            <span tw=\"inline-block ml-2\">Get Repos</span>\n          </button>\n          <input\n            type=\"text\"\n            value={value}\n            onChange={handleChange}\n            tw=\"text-gray-800\"\n            placeholder=\"Enter your Github username here\"\n          />\n        </form>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","let search = async (value) => {\n  try {\n    let result = await fetch(`https://api.github.com/users/${value}/repos`);\n    if (result.status === 404) {\n      alert(\"User not found\");\n      return;\n    }\n    let jsonResult = await result.json();\n    return jsonResult;\n  } catch (err) {\n    alert(`Cannot fetch: ${err}`);\n  }\n};\n\nexport default search;\n","let download = async (json) => {\n  //send to serve\n  const options = {\n    method: \"POST\",\n    body: JSON.stringify(json),\n    headers: new Headers({\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    }),\n  };\n\n  console.log(\"generating...\");\n\n  try {\n    let res = await fetch(\"/generate\", options);\n    let jsonRes = await res.json();\n    return jsonRes;\n  } catch (err) {\n    alert(\"Download error\");\n  }\n};\n\nexport default download;\n","import React, { useState, useEffect } from \"react\";\nimport \"tailwindcss/dist/base.min.css\";\nimport tw, { styled } from \"twin.macro\";\nimport \"./App.css\";\nimport Resume from \"./components/Resume\";\nimport Resume2 from \"./components/Resume-2\";\nimport prettier from \"prettier/standalone\";\nimport babylon from \"prettier/parser-babel\";\n\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-json\";\nimport \"ace-builds/src-noconflict/theme-monokai\";\n\nimport NavBar from \"./components/NavBar\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowCircleRight,\n  faArrowAltCircleLeft,\n  faDownload,\n  faSpinner,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport search from \"./services/github\";\nimport download from \"./services/download\";\n\nvar sample = {\n  firstname: \"Favour\",\n  lastname: \"Ori\",\n  contact: {\n    email: \"favourdemo@gmail.com\",\n    phone: \"(870) 949-0000\",\n    website: \"www.favourori.github.io\",\n    linkedin: \"linkedin.com/in/favourori/\",\n    github: \"github.com/orifavour\",\n  },\n  skills: [\n    {\n      type: \"Programming Languages\",\n      items: [\"Java\", \"Swift\", \"Python\", \"Javascript\", \"PHP\", \"Ruby\", \"Rails\"],\n    },\n    {\n      type: \"Web Frameworks\",\n      items: [\"Bootstrap\", \"Materialize\", \"Rails\"],\n    },\n    {\n      type: \"Databases\",\n      items: [\"MySQL\", \"SQLite\"],\n    },\n    {\n      type: \"Tools\",\n      items: [\n        \"Git\",\n        \"Sketch\",\n        \"Github\",\n        \"Craft by Invision\",\n        \"Andriod Studio\",\n        \"Xcode\",\n      ],\n    },\n    {\n      type: \"Interests\",\n      items: [\n        \"Software Development\",\n        \"Web Development\",\n        \"Machine Learning\",\n        \"Internet of Things\",\n      ],\n    },\n  ],\n  github_projects: [\n    {\n      project_name: \"Bethel Church (App Backend)\",\n      tagline: \"iOS App Admin\",\n      link: \"https://github.com/orifavour/BethelChurchiOSAppBackend\",\n      description: [\n        \"Desktop App (developed in Java) for managing & controlling the content of Bethel's Mobile App\",\n      ],\n      technology_used: {\n        tools: [\"Java\", \"PHP\", \"MySQL\"],\n      },\n    },\n    {\n      project_name: \"SAU Honors College\",\n      tagline: \"iOS App\",\n      link: \"https://github.com/orifavour/iOSHonorsCollege\",\n      description: [\n        \"iOS App designed for SAU Honors College  to improve the mobile experience of students, faculty, and friends of the college.\",\n      ],\n      technology_used: {\n        tools: [\"Swift\", \"Xcode\"],\n      },\n    },\n  ],\n  other_projects: [\n    {\n      headline: \"iOS App – Bethel Church, Magnolia\",\n      description:\n        \"Designed an iOS app for Bethel Church, to reduce printing of bulletins, and to let members have direct access to podcasts, upcoming events etc.\",\n      technology_used: {\n        tools: [\"Swift\", \"MySQL\", \"PHP\"],\n      },\n    },\n    {\n      headline: \"Course Selector – Computer Science Dept. SAU\",\n      description: \"Web App for seamless course selection and registration\",\n      technology_used: {\n        tools: [\"HTML5\", \"CSS3\", \"PHP\", \"MySQL\"],\n      },\n    },\n  ],\n  work_experience: [\n    {\n      title: \"Software Developer\",\n      organisation: \"Southern Arkansas University\",\n      location: \"Magnolia, AR\",\n      from: \"January 2017\",\n      to: \"Present\",\n      details: [\n        \"Working closely with my professors on various researches & projects\",\n      ],\n      technology_used: {\n        tools: [\"Xcode\", \"Swift\", \"Java\", \"HTML5\", \"CSS3\", \"PHP\"],\n      },\n    },\n  ],\n  education: {\n    schools: [\n      {\n        degree: \"Bachelor of Science\",\n        major: \"Computer Science\",\n        institution: \"Southern Arkansas University\",\n        graduation_year: 2020,\n      },\n    ],\n  },\n  other_experience_achievement: [\n    \"Web Hacking: Implemented encryption methods (MD5 and SHA-1)to secure a previously unsecure Web App\",\n    \"Volunteer, Magnolia Blossom, OCT 2016\",\n  ],\n};\n\nconst ErrorDisplay = ({ error }) => {\n  console.log(error);\n  let message = `Error on line ${error.loc.start.line}, column ${error.loc.start.column}`;\n\n  return (\n    <div tw=\"text-red-400 text-lg\">\n      <p>{message}</p>\n      <pre>{error.codeFrame}</pre>\n    </div>\n  );\n};\nconst LoadingContainer = styled.div`\n  text-align: middle;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\nconst LoadingText = styled.p`\n  font-size: 1.5em;\n  text-align: middle;\n  @media screen and (min-width: 768px) {\n    font-size: 2em;\n  }\n  @media screen and (min-width: 768px) {\n    font-size: 2.5em;\n  }\n`;\n\nconst Resumes = [Resume, Resume2];\n\nfunction App() {\n  let [data, setData] = useState(sample);\n  let [stringData, setStringData] = useState(\n    prettier.format(JSON.stringify(data), {\n      parser: \"json\",\n      plugins: [babylon],\n    })\n  );\n\n  let [currentResume, setCurrentResume] = useState(0);\n  let [isValid, setValid] = useState(true);\n  let [loading, setLoading] = useState(null);\n\n  useEffect(() => {\n    window.localStorage.setItem(\"editState\", stringData);\n  }, [stringData]);\n  let [error, setError] = useState({ status: false, error: {} });\n  let onChange = (value) => {\n    setStringData(value);\n    try {\n      prettier.format(value, {\n        parser: \"json\",\n        plugins: [babylon],\n      });\n      let newValue = JSON.parse(value);\n      setData(newValue);\n      setError({ status: false, error: {} });\n      setValid(true);\n    } catch (err) {\n      setValid(false);\n      if (!err.loc) {\n        console.warn(err);\n        return;\n      }\n      setError({\n        status: true,\n        error: err,\n      });\n    }\n  };\n\n  let handleGithubSearch = async (value) => {\n    setLoading(\"Fetching Repositories\");\n    try {\n      let res = await search(value);\n      setLoading(null);\n      if (res) {\n        console.log(res);\n        let projects = res.slice(0, 5).map((project) => {\n          return {\n            project_name: project.name,\n            link: project.html_url,\n            description: [project.description],\n            tagline: \"\",\n            technology_used: { tools: [] },\n          };\n        });\n        console.log(projects);\n        let newValue = { ...data, github_projects: projects };\n        onChange(JSON.stringify(newValue, null, 2));\n      }\n    } catch {}\n  };\n\n  let handleDownload = async () => {\n    setLoading(\"Generating your pdf\");\n\n    let response = await download({ resume: currentResume, data });\n    setLoading(null);\n    if (response?.filename) {\n      window.document.location.href = `/assets/${response.filename}`;\n    } else {\n      alert(\"Error occured generating your pdf\");\n    }\n  };\n\n  let handleReset = () => {\n    onChange(JSON.stringify(sample, null, 2));\n  };\n\n  let handleClear = () => {\n    onChange(JSON.stringify({}, null, 2));\n  };\n\n  let handleNextResume = () => {\n    console.log(\"next\");\n    setCurrentResume(currentResume + 1);\n  };\n\n  let handlePrevResume = () => {\n    console.log(\"prev\");\n    setCurrentResume(currentResume - 1);\n  };\n\n  let DisplayedResume = Resumes[currentResume];\n  return (\n    <>\n      {loading && (\n        <LoadingContainer>\n          <LoadingText>{loading}</LoadingText>\n          <FontAwesomeIcon icon={faSpinner} size=\"5x\" pulse />\n          <i className=\"fas fa-spinner fa-pulse\" />\n        </LoadingContainer>\n      )}\n      <NavBar getRepos={handleGithubSearch} />\n      <div tw=\"flex flex-col lg:flex-row justify-between\">\n        <div tw=\"w-full mb-3 lg:mb-0 lg:w-5/12 relative\">\n          <div className=\"fixed-action-btn absolute top-0\" tw=\"absolute top-0\">\n            <button className=\"btn-floating btn-large blue pulse\">\n              <i className=\"large material-icons\">mode_edit</i>\n            </button>\n            <ul>\n              <li>\n                <button\n                  className=\"btn tooltipped btn-floating yellow darken-1\"\n                  data-position=\"left\"\n                  data-tooltip=\"Reset\"\n                  id=\"reset\"\n                  onClick={handleReset}\n                >\n                  <i className=\"material-icons\">refresh</i>\n                </button>\n              </li>\n\n              <li>\n                <button\n                  className=\"btn tooltipped btn-floating blue\"\n                  data-position=\"left\"\n                  data-tooltip=\"Clear\"\n                  id=\"clear\"\n                  onClick={handleClear}\n                >\n                  <i className=\"material-icons\">remove_circle_outline</i>\n                </button>\n              </li>\n            </ul>\n          </div>\n          <AceEditor\n            mode=\"json\"\n            theme=\"monokai\"\n            value={stringData}\n            onChange={onChange}\n            name=\"editor\"\n            editorProps={{ $blockScrolling: true }}\n            height=\"80vh\"\n            width=\"100%\"\n            wrapEnabled\n          />\n        </div>\n        <div tw=\"w-full lg:w-7/12 flex items-center\" className=\"w-full\">\n          {error.status ? (\n            <ErrorDisplay error={error.error} />\n          ) : (\n            <div\n              tw=\"max-w-2xl my-auto mx-auto flex flex-col lg:flex-col-reverse\"\n              classNameName=\"max-w-lg flex-col-reverse\"\n            >\n              <div tw=\"mb-10 lg:mt-10 flex justify-between items-center\">\n                {currentResume > 0 && (\n                  <button onClick={handlePrevResume}>\n                    <FontAwesomeIcon\n                      icon={faArrowAltCircleLeft}\n                      tw=\"text-xl mx-5\"\n                    />\n                  </button>\n                )}\n                <button\n                  tw=\"px-4 py-2 mr-5 bg-blue-800 text-gray-100 rounded text-lg\"\n                  disabled={!isValid}\n                  onClick={handleDownload}\n                >\n                  <FontAwesomeIcon icon={faDownload} />\n                  <span tw=\"inline-block ml-2\">Download</span>\n                </button>\n                {currentResume < Resumes.length - 1 && (\n                  <button onClick={handleNextResume}>\n                    <FontAwesomeIcon\n                      icon={faArrowCircleRight}\n                      tw=\"text-xl mx-5\"\n                    />\n                  </button>\n                )}\n              </div>\n              <div\n                tw=\"px-5 border-gray-200 border\"\n                style={{ height: \"80vh\", overflow: \"scroll\" }}\n              >\n                <DisplayedResume data={data} />\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}